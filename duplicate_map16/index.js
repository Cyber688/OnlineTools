function t(t,e,n){let r="";for(let o=n-1;o>=0;o-=1)r+=t.getUint8(e+o).toString(16).padStart(2,"0");return r}export default function(e){const n=e.byID("file");e.byID("find").addEventListener("click",(()=>{const r=n.files[0];if(e.byID("dupes").innerHTML="",null==r)return e.setStatus({error:"No file specified."});const o=e.byID("ignore-empty").checked,s=e.byID("only-min-dupes").checked?Number(e.byID("min-dupes").value):1;r.arrayBuffer().then((n=>{const r=function(e){const n=new DataView(e);if(n.byteLength%2!=0||1280127286!==n.getUint32(0,!1))return{error:"Invalid Map16 file."};const r=new Map,o=n.getUint32(24,!0),s=n.getUint32(28,!0),i=n.getUint32(16,!0),l=n.getUint32(i,!0),a=n.getUint32(i+8,!0);let c=16*n.getUint32(36,!0)+n.getUint32(32,!0);const u=n.getUint8(40);0===u&&c>=16384?c+=16384:8===u&&(c+=32768);for(let e=0;e<o*s;e+=1){const s=c+16*Math.floor(e/o)+e%o,i=t(n,l+8*e,8);let u;u=s>=32768?"bg":t(n,a+2*e,2),r.set(s,i+u)}return r}(n);if(null==r.error){const t=function(t,e,n){t.sort(((t,e)=>t[1].localeCompare(e[1])));const r=new Map;for(let o=0;o<t.length;){const[s,i]=t[o];if(o+=1,o<t.length&&t[o][1]===i&&(!e||"10041004100410040130"!==i&&"1004100410041004bg"!==i)){const e=[];for(;o<t.length&&t[o][1]===i;)e.push(t[o][0]),o+=1;e.length>=n&&r.set(s,e)}}return r}([...r],o,s),n=t.size;if(0===n)e.setStatus({message:"✔️ No duplicates found."});else{e.setStatus({success:`${r.size} (0x${r.size.toString(16).toUpperCase()}) tiles were found, of which ${n} (0x${n.toString(16).toUpperCase()}) ${1===n?"has":"have"} ${s} or more duplicates.`});let o='<table class="table">';o+="<tr><th>Tile</th><th>Duplicates</th></tr>";const i=[...t];i.sort(((t,e)=>t[0]-e[0]));for(const[t,e]of i)o+=`<tr><td>${t.toString(16).toUpperCase()}</td><td>${e.map((t=>t.toString(16).toUpperCase())).join(", ")}</td></tr>`;o+="</table>",e.byID("dupes").innerHTML=o}}else e.setStatus(r)})).catch((t=>{console.log(t),e.setStatus({error:"Internal error."})}))}))}