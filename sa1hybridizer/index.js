const e=[8366864,8366876,8366888,8366900,8367006,8366912,8366924,8366936,8366948,8367104,8367112,8367120,158,170,182,194,216,228,5320,5332,5344,5356,5368,5380,5392,5404,5416,5428,5440,5452,5464,5476,5488,5500,5512,5524,5536,5548,5560,5572,5584,5596,5610,5622,5634,5646,5658,5670,5682,5694,5706,5718,5730,5742,5754,5766,6252,6267,6415,6456,8367872,8150,8162],t={OTHER:-1,ADDR:1,COMMA:2};class n{constructor(e,t,n){this.type=e,this.word=t,this.index=n}}function i(e){return parseInt(e,16).toString(16).toUpperCase()}function r(e,t,n){return e>=t&&e<=n}function s(t,n,s,a,$){let d=!1,l=!0,_=!1;-1!==a&&(4!=t.length||"y"!==s[a+1]&&"x"!==s[a+1]||"00"!=t.substring(0,2)||(_=!0)),t.startsWith("8")&&6==t.length&&(t=t.replace("8","0",1));let f=parseInt(t,16);if(Number.isNaN(f))throw`Error during parsing of address ${t}`;let p=!1;if(6===t.length&&([t,p]=function(e){let t=parseInt(e,16),n=[[8308736,8323071],[8374272,8388607],[7340032,7342079]].map((e=>{let[n,i]=e;return r(t,n,i)})),i=["map16_lo_by","map16_hi_by","save_mem"];if(n.some((e=>e))){let e=n.indexOf(!0);return[`${t.toString(16).toUpperCase().padStart(6,"0")}&$00FFFF|!${i[e]}`,!0]}if(t in[8362619,7350271])return[`!${t.toString(16).toUpperCase().padStart(6,"0")}`,!0];return[e,!1]}(t)),p)return[t,p,l,d];if(-1!==e.indexOf(f))t="!"+(_?`${i(t)}|!dp`:`${i(t)}`);else if(6===t.length&&r(f,0,1048575))t="$"+t+"|!bank";else if(6===t.length&&r(f,8257536,8265727))try{let n=t.substring(2),i=e.indexOf(parseInt(n,16));t=`!${e[i].toString(16)}`}catch{t=`($${t}&$FFFF)|bankA`}else 2===t.length?(l=!1,t="$"+t):r(f,256,8191)?t="$"+t+"|!addr":r(f,0,255)?t="$"+t+"|!dp":(l=!1,d=!0,t="$"+t,$.push(`Address ${t.toString(16).padStart(t.length,"0")} at line ${n} couldn't be converted`));return[t,p,l,d]}function a(i){try{let[a,$]=function(i){const a=i.split("\n");let $=[],d='\nif read1($00FFD5) == $23\t\t; check if the rom is sa-1\n\tsa1rom\n\t!SA1 = 1\n\t!dp = $3000\n\t!addr = $6000\n\t!bank = $000000\n\t!bankA = $400000\nelse\n\tlorom\n\t!SA1 = 0\n\t!dp = $0000\n\t!addr = $0000\n\t!bank = $800000\n\t!bankA = $7E0000\nendif\n\nmacro define_sprite_table(name, addr, addr_sa1)\n\tif !SA1 == 0\n\t\t!<name> = <addr>\n\telse\n\t\t!<name> = <addr_sa1>\n\tendif\nendmacro\n\nmacro define_base2_address(name, addr)\n\tif !SA1 == 0\n\t\t!<name> = <addr>\n\telse\n\t\t!<name> = <addr>|!addr\n\tendif\nendmacro\n;sprite tool / pixi defines\n%define_sprite_table("7FAB10",$7FAB10,$6040)\n%define_sprite_table("7FAB1C",$7FAB1C,$6056)\n%define_sprite_table("7FAB28",$7FAB28,$6057)\n%define_sprite_table("7FAB34",$7FAB34,$606D)\n%define_sprite_table("7FAB9E",$7FAB9E,$6083)\n%define_sprite_table("7FAB40",$7FAB40,$6099)\n%define_sprite_table("7FAB4C",$7FAB4C,$60AF)\n%define_sprite_table("7FAB58",$7FAB58,$60C5)\n%define_sprite_table("7FAB64",$7FAB64,$60DB)\n\n%define_sprite_table("7FAC00",$7FAC00,$60F1)\n%define_sprite_table("7FAC08",$7FAC08,$6030)\n%define_sprite_table("7FAC10",$7FAC10,$6038)\n\n;normal sprite defines\n\n%define_sprite_table("9E", $9E, $3200)\n%define_sprite_table("AA", $AA, $9E)\n%define_sprite_table("B6", $B6, $B6)\n%define_sprite_table("C2", $C2, $D8)\n%define_sprite_table("D8", $D8, $3216)\n%define_sprite_table("E4", $E4, $322C)\n%define_sprite_table("14C8", $14C8, $3242)\n%define_sprite_table("14D4", $14D4, $3258)\n%define_sprite_table("14E0", $14E0, $326E)\n%define_sprite_table("14EC", $14EC, $74C8)\n%define_sprite_table("14F8", $14F8, $74DE)\n%define_sprite_table("1504", $1504, $74F4)\n%define_sprite_table("1510", $1510, $750A)\n%define_sprite_table("151C", $151C, $3284)\n%define_sprite_table("1528", $1528, $329A)\n%define_sprite_table("1534", $1534, $32B0)\n%define_sprite_table("1540", $1540, $32C6)\n%define_sprite_table("154C", $154C, $32DC)\n%define_sprite_table("1558", $1558, $32F2)\n%define_sprite_table("1564", $1564, $3308)\n%define_sprite_table("1570", $1570, $331E)\n%define_sprite_table("157C", $157C, $3334)\n%define_sprite_table("1588", $1588, $334A)\n%define_sprite_table("1594", $1594, $3360)\n%define_sprite_table("15A0", $15A0, $3376)\n%define_sprite_table("15AC", $15AC, $338C)\n%define_sprite_table("15B8", $15B8, $7520)\n%define_sprite_table("15C4", $15C4, $7536)\n%define_sprite_table("15D0", $15D0, $754C)\n%define_sprite_table("15DC", $15DC, $7562)\n%define_sprite_table("15EA", $15EA, $33A2)\n%define_sprite_table("15F6", $15F6, $33B8)\n%define_sprite_table("1602", $1602, $33CE)\n%define_sprite_table("160E", $160E, $33E4)\n%define_sprite_table("161A", $161A, $7578)\n%define_sprite_table("1626", $1626, $758E)\n%define_sprite_table("1632", $1632, $75A4)\n%define_sprite_table("163E", $163E, $33FA)\n%define_sprite_table("164A", $164A, $75BA)\n%define_sprite_table("1656", $1656, $75D0)\n%define_sprite_table("1662", $1662, $75EA)\n%define_sprite_table("166E", $166E, $7600)\n%define_sprite_table("167A", $167A, $7616)\n%define_sprite_table("1686", $1686, $762C)\n%define_sprite_table("186C", $186C, $7642)\n%define_sprite_table("187B", $187B, $3410)\n%define_sprite_table("190F", $190F, $7658)\n\n%define_sprite_table("1938", $7FAF00, $418A00)\n%define_sprite_table("7FAF00", $7FAF00, $418A00)\n\n%define_sprite_table("1FD6", $1FD6, $766E)\n%define_sprite_table("1FE2", $1FE2, $7FD6)\n',l=[],_=[],f=0,p=!1;for(const[i,d]of a.entries()){l.push("");const a=["db","dw","dl","dd"];let b=!1,A=!1,F=/![A-Za-z\d_]+\s+=\s+((\$)?[\dA-Fa-f]{2,6})\S*/,c=d.match(F),h=d.trimEnd().split(/([ \t;])/);if(""===d.trim()||d.trimStart().startsWith(";")||c){if(c){p=!0;let t=null!=c[2];const n=parseInt(t?c[1].replace("$","0x"):c[1],t?16:10);12===n?_.push(`There is define ${c[0]} at line ${i+1} which is equal to 12,\n                     this might be a define related to how many sprites can be loaded by the game\n                     if so, change it to 22 or $16, or (even better) use the following\n\n                    \tif read1($00FFD5) == $23\n\t\t${c[0]}\n\telse\n\t\t\n                    ${c[0].split("=")[0]}= ${t?"$16":"22"}\n\tendif\n`):-1!==e.indexOf(n)&&t?_.push(`There is define ${c[0]} at line ${i+1} which is a sprite\n                    address, usually replacing the $ with ! works in most tools, it didn't get\n                    converted automatically because it might not be necessary to do so, make sure\n                    to convert manually it ONLY if needed.\n`):r(n,256,8191)&&_.push(`There is define ${c[0]} at line ${i+1} which might be a ram\n                     address, if it is, convert it by adding |!addr at the end of it, if it's not\n                     a ram address leave it alone\n`)}l[i]=d.trimEnd();continue}let m=!1;for(let e of h){let r=e.trim(),d="",F=/\$[\da-fA-F]{1,6}\|![a-zA-Z\d_]+\b/.exec(e);if(b||A);else if(";"===r[0])b=!0;else if(a.some((e=>e===r)))A=!0;else if(r.startsWith("PEA")||r.startsWith("PER"))m=!0;else if(null!==F)_.push(`Address was maybe already hybrid ${F} at line ${i+1}`);else if(null!==/\$[^, \n()\[\]]{1,6}/.exec(e)){if(m){m=!1,l[i]+=e;continue}let r=e.split(/([\[\](), ])/),a=[];for(let[e,i]of r.entries())if(i.startsWith("$")){let r=parseInt((o=i.replace("$","0x"),new Function("return ("+o+")")()));if(Number.isNaN(r)){let s=i.replace("$","").split(/[+\\\-^*~<>|]/);i=`$${r.toString(16).toUpperCase().padStart(Math.max(...s.map((e=>e.length))),"0")}`,a.push(new n(t.ADDR,i,e))}else{let r=i.split(/([+\-^*~<>| ])/);for(let i of r)i.startsWith("$")?a.push(new n(t.ADDR,i,e)):a.push(new n(t.OTHER,i,e))}}else i.startsWith(",")?a.push(new n(t.COMMA,i,e)):a.push(new n(t.OTHER,i,e));for(let e of a){let n=e.type,l=e.word,o=e.index;if(n===t.ADDR)try{let e=a[o+1],n=-1;void 0!==e&&(n=e.type===t.COMMA?o+1:-1);let[b,A,F,c]=s(l.replace("$",""),i,r,n,_);c&&(p=!0),F&&(f+=1,_.push(`Conversion ${l} -> ${b}`)),$.push(A),d+=b}catch{d+=l}else d+=l}}l[i]+=0!==d.length?d:e}}var o;return $.some((e=>e))&&(d+='\nmacro define_bwram(addr, bwram)\n    if read1($00FFD5) == $23\n        !<addr> = $<bwram>\n    else\n        !<addr> = $<addr>\n    endif\nendmacro\n%define_bwram(7F9A7B, 418800) ; ends at 7F9C7A\n%define_bwram(700800, 41A000) ; ends at 7027FF\nif read1($00FFD5) == $23\n    !map16_lo_by = $400000\n    !map16_hi_by = $410000\n    !save_mem = $41C000\nelse\n    !map16_lo_by = $7E0000\n    !map16_hi_by = $7F0000\n    !save_mem = $700000\nendif"\n'),_.push(`Total conversions: ${f}`),p&&_.push("Could require manual conversion for some addresses"),d+=l.join("\n"),[d,_.join("\n")]}(i);return{asm:a,messages:$}}catch(e){return{err:e}}}Object.freeze(t);export default function(e){const t=e.byID("file"),n=e.byID("generate");n.addEventListener("click",(()=>{const i=t.files[0];if(null==i)return e.setStatus({error:"No file specified."});n.disabled=!0,i.text().then((t=>{const n=a(t);if(e.setStatus({success:"\n"+n.messages}),null!=n.asm)return e.download(i.name,new Blob([n.asm],{type:"text/x-asm"}))})).catch((t=>{console.log(t),e.setStatus({error:"Internal error."})})).finally((()=>{n.disabled=!1}))}))}